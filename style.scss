* {
   margin: 0;
   padding: 0;
   font-size: 16px;
   box-sizing: content-box;
}

.section {
   display: flex;
   justify-content: center;
   align-items: center;
   gap: 2%;
   padding: 2%;
   height: 100vh;

   &:nth-child(odd) {
      background-color: lightcoral;
   }

   &:nth-child(even) {
      background-color: lightcyan;
   }

   &--column {
      flex-flow: wrap column;
   }

   &--row {
      flex-flow: wrap row;
   }

   &--grid {
      flex-wrap: wrap;
      .card {
         flex-grow: 1;
      }
   }
}

.card {
   background-color: white;
   box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
   border-radius: 4px;
   height: 20%;
   width: 20%;
   // opacity: 0;
}

// Standard styles for the to-be animated elements
div[data-animate],
div[data-animation-child] {
   opacity: 0;

   @media (max-width: 767px) {
      animation-delay: 0ms;
   }
}

div[data-animation-parent] {
   opacity: 1;
}

// Standard styles for specific animation variants
div[data-animate*='fadeIn'] {
   @media (max-width: 767px) {
      animation-delay: 0ms;
   }
}

// Either set delay as inline style variable
// or generate classes for list of set delays
.fadeIn {
   // Inline style variables
   &Left {
      animation: fadeInLeft 1s forwards;
      animation-delay: var(--delay, 0ms);
   }

   &Right {
      animation: fadeInRight 1s forwards;
      animation-delay: var(--delay, 0ms);
   }

   &Down {
      animation: fadeInDown 1s forwards;
      animation-delay: var(--delay, 0ms);
   }

   &Up {
      animation: fadeInUp 1s forwards;
      animation-delay: var(--delay, 0ms);
   }

   // Generated classes for list of delays
   $delays: 0, 100, 200, 300, 400;

   @each $delay in $delays {
      &Left--#{ $delay } {
         animation: fadeInLeft 1s forwards #{$delay}ms;

         @media (max-width: 767px) {
            animation-delay: 0ms;
         }
      }

      &Right--#{ $delay } {
         animation: fadeInRight 1s forwards #{$delay}ms;

         @media (max-width: 767px) {
            animation-delay: 0ms;
         }
      }

      &Down--#{ $delay } {
         animation: fadeInDown 1s forwards #{$delay}ms;

         @media (max-width: 767px) {
            animation-delay: 0ms;
         }
      }

      &Up--#{ $delay } {
         animation: fadeInUp 1s forwards #{$delay}ms;

         @media (max-width: 767px) {
            animation-delay: 0ms;
         }
      }
   }
}

@keyframes fadeInLeft {
   from {
      opacity: 0;
      transform: translateX(-50%);
   }

   to {
      opacity: 1;
      transform: translateX(0%);
   }
}

@keyframes fadeInRight {
   from {
      opacity: 0;
      transform: translateX(50%);
   }

   to {
      opacity: 1;
      transform: translateX(0%);
   }
}

@keyframes fadeInDown {
   from {
      opacity: 0;
      transform: translateY(50%);
   }

   to {
      opacity: 1;
      transform: translateY(0%);
   }
}

@keyframes fadeInUp {
   from {
      opacity: 0;
      transform: translateY(50%);
   }

   to {
      opacity: 1;
      transform: translateY(0%);
   }
}
